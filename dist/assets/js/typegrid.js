/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js?");

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\n\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/createClass.js?");

/***/ }),

/***/ "./src/js/data/config.js":
/*!*******************************!*\
  !*** ./src/js/data/config.js ***!
  \*******************************/
/*! exports provided: debug, msg, lib, console, attr, aria, style, styleBase, sizes, num, color, elem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debug\", function() { return debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"msg\", function() { return msg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lib\", function() { return lib; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"console\", function() { return console; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"attr\", function() { return attr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"aria\", function() { return aria; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"style\", function() { return style; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"styleBase\", function() { return styleBase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sizes\", function() { return sizes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"num\", function() { return num; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"color\", function() { return color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elem\", function() { return elem; });\n\n\nvar debug = {\n  count: {\n    resize: 0\n  },\n  msg: {\n    \"default\": \"テストだよ。\",\n    resize: \"リサイズしたよ。\",\n    load: \"ロードだよ。\",\n    model: \"modelだよ。\",\n    view: \"viewだよ。\",\n    controller: \"controllerだよ。\",\n    err: {\n      deviceDicision: 'Please set \"@media\" or \"userAgent\" to general.deviceDecision of typegrid.json.'\n    },\n    attention: {\n      deviceDecision: \"Current typegrid.js does not support user agent judgment.\"\n    }\n  }\n};\nvar msg = {\n  get: {\n    notfound: \"Can not find typegrid.json. Please put it in the same directory as typegrid.js. Please check if there is any problem with the structure of json when placing :)\"\n  }\n};\nvar lib = {\n  name: \"typegrid.js\",\n  prefix: \"tg_\",\n  json: {\n    file: \"typegrid.json\",\n    storage: \"typegrid_json\"\n  }\n};\nvar console = {\n  red: \"color:#f00;\",\n  green: \"color:#0f0;\",\n  blue: \"color:#00f;\"\n};\nvar attr = {\n  svg: {\n    ns: \"http://www.w3.org/2000/svg\",\n    width: 100\n  }\n};\nvar aria = {\n  presen: \"role='presentation'\",\n  hidden: \"aria-hidden='true'\"\n};\nvar style = {\n  mode: \"horizontal-tb\" //\"horizontal-tb\" or \"vertical-rl\"\n  ,\n  pointerEvents: \"pointer-events: none;\"\n};\nvar styleBase = \"\\n#tg_all {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    z-index: 99900;\\n    width: 100%;\\n    max-width: 100%;\\n    height: auto;\\n    min-height: 100%;\\n    overflow: hidden;\\n    font-feature-settings: \\\"palt\\\";\\n    pointer-events: none;\\n}\\n#tg_originForWidth {\\n    pointer-events: none;\\n    position: absolute;\\n    top: 0;\\n    width: calc(100vw - 100%);\\n    height: 1px;\\n    opacity: 0;\\n}\\n#tg_wrapper {\\n    pointer-events: none;\\n}\\n#tg_ruler {\\n    width: 100%;\\n    min-width: 100%;\\n}\\n#tg_ruler, #tg_setting, #tg_gui {\\n    pointer-events: auto;\\n\\n}\\n\";\nvar sizes = {\n  test: 280,\n  \"char\": 16,\n  gutter: 2\n};\nvar num = {\n  grid: 1,\n  unit: 1,\n  guide: 1,\n  \"char\": 1\n};\nvar color = {\n  grid: \"#cccccc\"\n};\nvar elem = {\n  wrapper: {\n    html: \"<div id='tg_wrapper'><svg id='tg_grid'><g id='tg_base'><g id='tg_base__body'></g></g><g id='tg_unit'><g id='tg_unit__body'></g></g><g id='tg_sizes'><g id='tg_sizes__body'></g></g><g id='tg_chars'><g id='tg_chars__body'></g></g><g id='tg_layout'><g id='tg_layout__body'></g></g><g id='tg_row'><g id='tg_row__body'></g></g><g id='tg_rhythm'><g id='tg_rhythm__body'></g></g></svg></div><div id='tg_ruler'><div id='tg_ruler__body'></div></div><div id='tg_settings'></div><div id='tg_gui'><div id='tg_gui__body></div></div>\"\n  }\n}; // export let size = {\n//     char: {\n//          px:   16\n//         ,em:    1\n//         ,rem:   1\n//     }\n//     ,unit: {\n//          px:      \"px\"\n//         ,em:      \"em\"\n//         ,rem:     \"rem\"\n//         ,percent: \"%\"\n//     }\n//     ,grids: {\n//         base:    {\n//         }\n//         ,width  : {\n//             content  : 16\n//         }\n//         ,height : {\n//             content  : 16\n//         }\n//         ,layout : {\n//             content  : 16\n//         }\n//     }\n// }\n// export const elems = {\n//      column: {//カラム\n//          class  : \"column\"\n//         ,entity : \"rect\"\n//         ,fill   : \"#999\"\n//         ,stroke : \"#999\"\n//         ,css    : \"\"\n//         ,index  : 9998\n//      }\n//     ,unit : {//複数文字分のサイズ\n//          class  : \"unit\"\n//         ,entity : \"rect\"\n//         ,fill   : \"#ccc\"\n//         ,stroke : \"#ccc\"\n//         ,css    : \"\"\n//         ,index  : 9999\n//      }\n//     ,guide: {//ガイド線\n//          class  : \"guide\"\n//         ,entity : \"line\"\n//         ,fill   : \"#00FFFF\"\n//         ,stroke : \"#00FFFF\"\n//         ,css    : \"\"\n//         ,index  : 9998\n//      }\n//      ,ruler: {//ガイド線\n//           class  : \"ruler\"\n//          ,entity : \"line\"\n//          ,fill   : \"#00FFFF\"\n//          ,stroke : \"#00FFFF\"\n//          ,css    : \"\"\n//          ,index  : 9998\n//      }\n//     ,grid : {\n//          class  : \"grid\"\n//         ,entity : \"rect\"\n//         ,fill   : \"#ccc\"\n//         ,stroke : \"#ccc\"\n//         ,css    : \"\"\n//         ,index  : 9999\n//      }\n//     ,gutter : {//カラム間の幅\n//          class  : \"gutter\"\n//         ,entity : \"rect\"\n//         ,fill   : \"#ccc\"\n//         ,stroke : \"#ccc\"\n//         ,css    : \"\"\n//         ,index  : 9999\n//      }\n// }\n\n//# sourceURL=webpack:///./src/js/data/config.js?");

/***/ }),

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _modules_snippet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/snippet */ \"./src/js/modules/snippet.js\");\n/* harmony import */ var _modules_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/utils */ \"./src/js/modules/utils.js\");\n/* harmony import */ var _data_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/config */ \"./src/js/data/config.js\");\n/* harmony import */ var _modules_user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/user */ \"./src/js/modules/user.js\");\n/* harmony import */ var _mvc_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mvc/model */ \"./src/js/mvc/model.js\");\n/* harmony import */ var _mvc_view__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mvc/view */ \"./src/js/mvc/view.js\");\n/* harmony import */ var _mvc_controller__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./mvc/controller */ \"./src/js/mvc/controller.js\");\n/*\n *******************************************************************************\n *\ttypegrid.js\n *\tgenerating layout grid on browser for designers & engineers.\n *\tauthor:  @ytkwsm — YUTA KAWASUMI\n *\tURL:     http://ytkwsm.work/typegrid/\n *\tgithub:  https://github.com/ytkwsm/typegrid\n *\tlicence: MIT\n *******************************************************************************\n *\n *\t## typeGrid.jsの目的\n *\t* ブラウザ上でのデザイン、レイアウト調整作業のための補助ツール\n *\t* remベースのCSSレイアウトのガイドとして利用できる\n *\t* ライブラリに依存せず、typeGrid.jsを読み込ませるだけで動作できる\n *\t* 利用者独自のグリッドを設定できる\n *\t* 表示/非表示のon/offができる\n *\n *\t## typeGrid.jsの具体的な機能\n *\t1. z-index最前面に、svgのグリッドレイヤーを生成\n *\t2. 最大3つの、異なるグリッドレイヤーを生成\n *\t3. グリッドの初期値はtypeGrid.js上の値を利用。\n *\t4. GUIでグリッドの値を変更可能\n *\t5. 外部jsonファイルで定義したグリッド生成用ルールで初期値を変更可能\n *\t6. キーボードショートカットで表示/非表示をon/off\n *\n*/\n // import ------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\nvar lib = _data_config__WEBPACK_IMPORTED_MODULE_3__[\"lib\"].name,\n    consoleRed = _data_config__WEBPACK_IMPORTED_MODULE_3__[\"console\"].red,\n    consoleGreen = _data_config__WEBPACK_IMPORTED_MODULE_3__[\"console\"].green,\n    consoleBlue = _data_config__WEBPACK_IMPORTED_MODULE_3__[\"console\"].blue; // load --------------------------------------------------------------------------\n\nconsole.group(\"%c[\" + lib + \"]: %c\" + \"%cmain.js%c %cclass App%c\", consoleRed, '', consoleGreen, '', consoleBlue, '');\n\nvar App = function App() {\n  _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, App);\n\n  var myApp = this;\n  myApp.snippet = _modules_snippet__WEBPACK_IMPORTED_MODULE_1__;\n  myApp.config = _data_config__WEBPACK_IMPORTED_MODULE_3__;\n  myApp.utils = _modules_utils__WEBPACK_IMPORTED_MODULE_2__;\n  var api = {};\n\n  api.init = function () {\n    myApp.user = _modules_user__WEBPACK_IMPORTED_MODULE_4__[\"getJSON\"](function (json) {\n      // サクセスのコールバック\n      myApp.config[myApp.config.lib.json.storage] = json; // config.typegrid_json\n\n      console.group(\"%c[\" + lib + \"]: %c\" + \"%cmain.js%c %cthis.model%c\", consoleRed, '', consoleGreen, '', consoleBlue, '');\n      myApp.model = new _mvc_model__WEBPACK_IMPORTED_MODULE_5__[\"default\"](myApp.utils, myApp.config, myApp.user);\n      console.groupEnd();\n      console.group(\"%c[\" + lib + \"]: %c\" + \"%cmain.js%c %cthis.view%c\", consoleRed, '', consoleGreen, '', consoleBlue, '');\n      myApp.view = new _mvc_view__WEBPACK_IMPORTED_MODULE_6__[\"default\"](myApp.utils, myApp.model);\n      console.groupEnd();\n      console.group(\"%c[\" + lib + \"]: %c\" + \"%cmain.js%c %cthis.controller%c\", consoleRed, '', consoleGreen, '', consoleBlue, '');\n      myApp.controller = new _mvc_controller__WEBPACK_IMPORTED_MODULE_7__[\"default\"](myApp.utils, myApp.model, myApp.view);\n      console.groupEnd();\n    });\n  };\n\n  api.destroy = function () {\n    myApp.utils.unlistenMediaQueries();\n    myApp.utils.uncheckWindowSize();\n  };\n\n  api.init(); // First run\n\n  return {\n    init: api.init,\n    destroy: api.destroy\n  };\n};\n\nwindow.__typegrid = new App();\nconsole.groupEnd();\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ }),

/***/ "./src/js/modules/snippet.js":
/*!***********************************!*\
  !*** ./src/js/modules/snippet.js ***!
  \***********************************/
/*! exports provided: tgFilePathOrigin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tgFilePathOrigin\", function() { return tgFilePathOrigin; });\n/* harmony import */ var _data_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/config */ \"./src/js/data/config.js\");\n\n\n\nfunction tgFilePathOrigin() {\n  var tgFilePathOriginBody = function () {\n    if (document.currentScript) {\n      return document.currentScript.src;\n    } else {\n      var loadScripts = document.getElementsByTagName('script'),\n          script = loadScripts[loadScripts.length - 1];\n\n      if (script.src) {\n        return script.src;\n      }\n    }\n  }();\n\n  return tgFilePathOriginBody;\n} // export function convertHex (color) {\n//     var ret = /rgba?\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),?\\s*([.\\d]+)?\\)/.exec(color);\n//     var convertHex = '';\n//     for(var i=1;i<=3;i++){\n//         var hex = Number(ret[i]).toString(16);\n//         convertHex += (hex.length === 1)? '0' + hex : hex;\n//     }\n//     return convertHex;\n// }\n// export function setElem(name, attr, value, type) {\n//     const elemName = name;\n//     const attrName = attr;\n//     const elemType = type;\n//     if (elemType == null || \"html\") {\n//         var elemTag = document.createElement(elemName);\n//     } else if(elemType == \"svg\") {\n//         var elemTag = document.createElementNS(config.svg.attr.ns, elemName)\n//     }\n//     if (attrName !== null) {\n//         const attrValue = value;\n//         elemTag.setAttribute(attrName, attrValue);\n//     }\n//     return elemTag;\n// }\n// function elemAppend(elem, type, name) {\n//     const elemName     = elem;\n//     const targetType   = type;\n//     const targetName   = name;\n//     if (targetType == null || \"tag\") {\n//         var insertTarget = document.getElementsByTagName(targetName).item(0);\n//     } else if(targetType == \"id\") {\n//         var insertTarget = document.getElementById(targetName);\n//     } else if(targetType == \"class\") {\n//         var insertTarget =  function() {\n//             return document.getElementsByClassName(targetName);\n//         }\n//     }\n//     // var insertTarget = document.getElementsByTagName(targetName).item(0);\n//     insertTarget.appendChild(elemName);\n// }\n// export function getId(id) {\n//     return document.getElementById(id);\n// }\n// export function getTag(tag) {\n//     return document.getElementsByTagName(tag).item(0);\n// }\n// export function getWidth() {\n//     var currentWidth = window.innerWidth||document.documentElement.clientWidth||0;\n// // \t\tvar currentWidth = Math.max.apply( null, [document.body.clientHeight , document.body.scrollHeight, document.documentElement.scrollHeight, document.documentElement.clientHeight] );\n//     return currentWidth;\n// }\n// export function getHeight() {\n//     var currentHeight = Math.max.apply( null, [document.body.clientHeight , document.body.scrollHeight, document.documentElement.scrollHeight, document.documentElement.clientHeight] );\n//     return currentHeight;\n// }\n// export function setElem(name, attr, value, type) {\n//     const elemName = name;\n//     const attrName = attr;\n//     const elemType = type;\n//     if (elemType == null || \"html\") {\n//         var elemTag = document.createElement(elemName);\n//     } else if(elemType == \"svg\") {\n//         var elemTag = document.createElementNS(config.svg.attr.ns, elemName)\n//     }\n//     if (attrName !== null) {\n//         const attrValue = value;\n//         elemTag.setAttribute(attrName, attrValue);\n//     }\n//     return elemTag;\n// }\n// function elemAppend(elem, type, name) {\n//     const elemName     = elem;\n//     const targetType   = type;\n//     const targetName   = name;\n//     if (targetType == null || \"tag\") {\n//         var insertTarget = document.getElementsByTagName(targetName).item(0);\n//     } else if(targetType == \"id\") {\n//         var insertTarget = document.getElementById(targetName);\n//     } else if(targetType == \"class\") {\n//         var insertTarget =  function() {\n//             return document.getElementsByClassName(targetName);\n//         }\n//     }\n//     // var insertTarget = document.getElementsByTagName(targetName).item(0);\n//     insertTarget.appendChild(elemName);\n// }\n// export function getViewBox(currentWidth, currentHeight){\n//     //ブラウザの現在のレンダリングエリアのサイズと同一の数値をviewbox属性の値として書き出す関数\n//     //引数：横幅、縦幅\n//     //使用例：getViewBox(getWidth(), getHeight());\n//     var viewBoxValue = new Array();\n//     viewBoxValue.push(\"0 0 \");\n//     viewBoxValue.push(currentWidth);\n//     viewBoxValue.push(\" \");\n//     viewBoxValue.push(currentHeight);\n//     var svgViewBox = viewBoxValue.join('');\n//     return svgViewBox;\n// }\n// export function setViewBox(targetSvg, currentViewBox, currentWidth, currentHeight) {\n//     //引数に指定したSVG要素のviewbox属性を、ブラウザのレンダリングエリアのサイズで書き換える関数\n//     //引数：対象SVG要素、viewboxの値、横幅、縦幅\n//     //使用例：setSvgView(target, getViewBox(getWidth(), getHeight()),getWidth(), getHeight());\n//     // targetSvg.textContent = null;\n//     targetSvg.removeAttribute(\"viewBox\");\n//     targetSvg.setAttribute(\"viewBox\", getViewBox(currentWidth,currentHeight));\n//     targetSvg.setAttribute(\"width\", currentWidth);\n//     targetSvg.setAttribute(\"height\", currentHeight);\n// }\n// export function setGrids() {\n//     var gridBody = getId(tgPrefix + \"gridBody\");\n//     var colBody = getId(tgPrefix + \"colBody\");\n//         setViewBox(gridBody, getViewBox(getWidth(), getHeight()),getWidth(), getHeight());\n//         setViewBox(colBody, getViewBox(getWidth(), getHeight()),getWidth(), getHeight());\n//         gridBody.appendChild(loopGridSolidY());\n//         gridBody.appendChild(loopGridSolidX());\n//         gridBody.appendChild(loopGridDashY());\n//         gridBody.appendChild(loopGridDashX());\n// }\n\n//# sourceURL=webpack:///./src/js/modules/snippet.js?");

/***/ }),

/***/ "./src/js/modules/user.js":
/*!********************************!*\
  !*** ./src/js/modules/user.js ***!
  \********************************/
/*! exports provided: getJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getJSON\", function() { return getJSON; });\n/* harmony import */ var _modules_snippet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/snippet */ \"./src/js/modules/snippet.js\");\n/* harmony import */ var _data_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data/config */ \"./src/js/data/config.js\");\n\n\n\n\n/**\n * @void getJSON\n * @param successCallBack Ajaxのサクセスの場合の機能\n */\n\nfunction getJSON(successCallBack) {\n  fetch((_modules_snippet__WEBPACK_IMPORTED_MODULE_0__[\"tgFilePathOrigin\"]() || '').replace(/typegrid.js/g, \"\") + _data_config__WEBPACK_IMPORTED_MODULE_1__[\"lib\"].json.file).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw _data_config__WEBPACK_IMPORTED_MODULE_1__[\"msg\"].get.notfound;\n  }).then(successCallBack)[\"catch\"](function (error) {\n    console.log(error); // throw config.msg.get.◯◯\n  });\n}\n\n//# sourceURL=webpack:///./src/js/modules/user.js?");

/***/ }),

/***/ "./src/js/modules/utils.js":
/*!*********************************!*\
  !*** ./src/js/modules/utils.js ***!
  \*********************************/
/*! exports provided: getJSON, deviceDecision, media, wrapper, calcScrollbarWidth, checkBrowserHeight, setWrapperHeight, width, height, ua, getElementTagStyle, convertHex, convertComputedFontSize, getStyles, decisionGutterSideType, decisionColumnSizeType, setSvgSizes, reset, wrapperFit, insertStyleElem, resize, listenMediaQueries, unlistenMediaQueries, checkWindowSize, uncheckWindowSize, keyBinds */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getJSON\", function() { return getJSON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deviceDecision\", function() { return deviceDecision; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"media\", function() { return media; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapper\", function() { return wrapper; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calcScrollbarWidth\", function() { return calcScrollbarWidth; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkBrowserHeight\", function() { return checkBrowserHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setWrapperHeight\", function() { return setWrapperHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"width\", function() { return width; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"height\", function() { return height; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ua\", function() { return ua; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getElementTagStyle\", function() { return getElementTagStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertHex\", function() { return convertHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertComputedFontSize\", function() { return convertComputedFontSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStyles\", function() { return getStyles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decisionGutterSideType\", function() { return decisionGutterSideType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decisionColumnSizeType\", function() { return decisionColumnSizeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSvgSizes\", function() { return setSvgSizes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reset\", function() { return reset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"wrapperFit\", function() { return wrapperFit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertStyleElem\", function() { return insertStyleElem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resize\", function() { return resize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listenMediaQueries\", function() { return listenMediaQueries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unlistenMediaQueries\", function() { return unlistenMediaQueries; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkWindowSize\", function() { return checkWindowSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uncheckWindowSize\", function() { return uncheckWindowSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keyBinds\", function() { return keyBinds; });\n/* harmony import */ var _data_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/config */ \"./src/js/data/config.js\");\n\n\n // export function tgFilePathOrigin() {\n//     const tgFilePathOriginBody = (function() {\n//         if (document.currentScript) {\n//             return document.currentScript.src;\n//         } else {\n//             const loadScripts = document.getElementsByTagName('script'),\n//             script = loadScripts[loadScripts.length-1];\n//             if (script.src) {\n//                 return script.src;\n//             }\n//         }\n//     })();\n//     return tgFilePathOriginBody;\n// }\n//model.js //////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction getJSON(item) {\n  return _data_config__WEBPACK_IMPORTED_MODULE_0__[item];\n}\nfunction deviceDecision(decisionStr, mediaDevicesStr, mediaBreakpointsWidthMinStr, msgAttentionStr, msgErrStr) {\n  var decision = decisionStr,\n      mediaDevice = mediaDevicesStr,\n      mediaWidthMin = mediaBreakpointsWidthMinStr,\n      msgAttention = msgAttentionStr,\n      msgErr = msgErrStr;\n\n  if (decision === \"@media\") {\n    console.log(decision);\n    this.media(mediaDevice, mediaWidthMin);\n  } else if (decision === \"userAgent\") {\n    console.log(msgAttention);\n  } else {\n    console.log(msgErr);\n  } // console.log(fontSize(this.user.media.contents.fontSize));\n\n\n  console.log(this.devices);\n  console.log(this.fontSize);\n  console.log(this.fontSize.length);\n  console.log(this.fontSize[0]);\n}\nfunction media(devices, breakPoints) {\n  var devicesNamespaces = devices;\n  var devicesBreakPoints = breakPoints;\n  var matchParam = new Array();\n  var conditionUnit = \"px\";\n  var conditionMedia = \"screen\";\n  var conditionWidthMin = \"min-width: \";\n  var conditionWidthMax = \"max-width: \";\n  var testBreakpoints;\n  console.log(\"model.media(); -> device num: \" + devicesNamespaces.length);\n  console.log(\"model.media(); -> device num: \" + devicesBreakPoints.length);\n  console.log(devicesNamespaces);\n  console.log(devicesBreakPoints);\n  console.log(matchParam);\n\n  for (var i = 0; i < devicesBreakPoints.length; i++) {}\n\n  devicesBreakPoints.some(function (val, index) {\n    if (index == 0) {\n      matchParam.push(conditionMedia + ' and (' + conditionWidthMax + (devicesBreakPoints[index + 1] - 1) + conditionUnit + ')');\n    } else if (index == devicesBreakPoints.length - 1) {\n      matchParam.push(conditionMedia + ' and (' + conditionWidthMin + val + conditionUnit + ')');\n    } else {\n      matchParam.push(conditionMedia + ' and (' + conditionWidthMax + (devicesBreakPoints[index + 1] - 1) + conditionUnit + ') and (' + conditionWidthMin + devicesBreakPoints[index] + conditionUnit + ')');\n    }\n  });\n  console.log(matchParam);\n\n  for (var _i = 0; _i < matchParam.length; _i++) {\n    console.log(matchParam[_i]);\n  }\n\n  console.log(matchParam);\n  var myQuery = [].concat(matchParam);\n  myQuery.some(function (val, index) {\n    myQuery[index] = myQuery[index].replace(/\\s+/g, \"\");\n  });\n  console.log(myQuery);\n  return myQuery; // window.addEventListener('load', testBreakpoints);\n  // testBreakpoints = function () {\n  //     console.log(\"testBreakpoints start ==========================>\");\n  // \tmyQuery.some(function (val, index) {\n  // \t\t// init\n  // \t\tif (window.matchMedia(myQuery[index]).matches) {\n  // \t\t\t_.dispatchEvent(break_point_change_event, { width: window.innerWidth, breakpoint: _.settings.breakpoints[index] });\n  // \t\t}\n  // \t\twindow.matchMedia(myQuery[index]).addListener(function (e) {\n  // \t\t\tif (e.matches) {\n  // \t\t\t\tvar tmp = e['media'].replace(/\\s+/g, \"\");\n  // \t\t\t\t// fire\n  // \t\t\t\t_.dispatchEvent(break_point_change_event, { width: window.innerWidth, breakpoint: _.settings.breakpoints[myquery_cl.indexOf(tmp)] });\n  // \t\t\t}\n  // \t\t});\n  // \t});\n  //     console.log(\"=========================> testBreakpoints end\");\n  // };\n  // console.log(testBreakpoints);\n  // function testBreakpoints() {\n  //     console.log(\"fire\");\n  //     if (window.matchMedia(myQuery[index]).addListener(function (e){\n  //     })) {\n  //     }\n  // }\n  // window.addEventListener('load', check_breakpoints);\n  // console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n  // check_breakpoints = function () {\n  //     console.log(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n  // \tmatchParam.some(function (val, index) {\n  // \t\t// init\n  // \t\tif (window.matchMedia(matchParam[index]).matches) {\n  // \t\t\t_.dispatchEvent(break_point_change_event, { width: window.innerWidth, breakpoint: devicesBreakPoints[index] });\n  // \t\t}\n  // \t\twindow.matchMedia(matchParam[index]).addListener(function (e) {\n  // \t\t\tif (e.matches) {\n  // \t\t\t\tvar tmp = e['media'].replace(/\\s+/g, \"\");\n  // \t\t\t\t// fire\n  // \t\t\t\t_.dispatchEvent(break_point_change_event, { width: window.innerWidth, breakpoint: devicesBreakPoints[myQuery.indexOf(tmp)] });\n  // \t\t\t}\n  // \t\t});\n  // \t});\n  // };\n}\nfunction wrapper(htmlSet, model) {\n  console.log(\"view.js: wrapperを生成します。\");\n  var root = document.createElement(\"div\");\n  var htmlBody = document.getElementsByTagName(\"body\").item(0);\n  var htmlWrapper = htmlSet;\n  root.setAttribute(\"id\", \"tg_all\");\n  root.setAttribute(\"role\", \"presentation\");\n  root.setAttribute(\"aria-hidden\", \"true\");\n  htmlBody.appendChild(root);\n  root.innerHTML = htmlWrapper;\n  console.log(model.width());\n  console.log(model.height());\n}\nfunction calcScrollbarWidth() {\n  var element = document.createElement('div');\n  element.style.visibility = 'hidden';\n  element.style.overflow = 'scroll';\n  document.body.appendChild(element);\n  var scrollbarWidth = element.offsetWidth - element.clientWidth;\n  console.log(element.offsetWidth);\n  console.log(element.clientWidth);\n  document.body.removeChild(element);\n  console.log(scrollbarWidth);\n  return scrollbarWidth;\n}\nfunction checkBrowserHeight() {\n  //1. ビューポート縦幅をチェック\n  var innerHeight = window.innerHeight;\n  var documentClientHeight = document.documentElement.clientHeight;\n  var resultViewportHeight = Math.max(innerHeight, documentClientHeight); //サイズを比較して、大きい方をビューポートの縦幅として取得。\n\n  console.log(\"ビューポートの縦幅　：\" + resultViewportHeight + \"px\"); //2. スクロール含んだ縦幅をチェック\n\n  var offsetHeight = document.body.offsetHeight;\n  var documentBodyclientHeight = document.body.clientHeight;\n  var scrollHeight = document.body.scrollHeight;\n  var resultDocumentHeight = Math.max(scrollHeight, documentBodyclientHeight); //サイズを比較して、大きい方を大きい方をドキュメントの縦幅として取得。\n\n  console.log(\"ドキュメントの縦幅：\" + resultDocumentHeight + \"px\"); //3. 1, 2で、ドキュメントの縦幅が大きいかチェック\n\n  var isScrollbarOccur = resultViewportHeight < resultDocumentHeight; //\n\n  console.log(resultViewportHeight + \" < \" + resultDocumentHeight + \": \" + isScrollbarOccur);\n  return isScrollbarOccur; //4. 3番の結果を送る\n  // return hoge\n  //5. (別関数) width(); 内で、\n  //5-1. 縦スクロールがあればcalcScrollbarWidth()の値を引いたwidthのサイズを返す。\n  //5-2. 縦スクロールがなければ、calcScrollbarWidth()の値を引かずに、全幅のwidthを返す。\n}\nfunction setWrapperHeight() {\n  var target = document.getElementById(\"tg_wrapper\");\n  var currentHeight = height() + \"px\";\n  console.log(currentHeight);\n  target.style.height = currentHeight;\n}\nfunction width() {\n  //get all width\n  function documentWidth() {\n    return window.innerWidth || document.documentElement.clientWidth || 0;\n  } // console.log(documentWidth());\n\n\n  return documentWidth();\n}\nfunction height() {\n  function documentHeight() {\n    return Math.max.apply(null, [window.innerHeight, document.documentElement.clientHeight, document.body.offsetHeight, document.body.clientHeight, document.body.scrollHeight]);\n  }\n\n  console.log(documentHeight());\n  return documentHeight();\n}\nfunction ua() {\n  var ua = navigator.userAgent;\n  console.log(ua);\n\n  if (ua.indexOf('iPhone') > 0 || ua.indexOf('Android') > 0 && ua.indexOf('Mobile') > 0) {\n    console.log(\"mobile\");\n    if (ua.indexOf('iPhone') > 0) console.log(\"iPhone\"); // iPhone\n\n    if (ua.indexOf('Android') > 0) console.log(\"Android Mobile\"); // Android\n  } else if (ua.indexOf('iPad') > 0 || ua.indexOf('Android') > 0) {\n    console.log(\"tablet\");\n    if (ua.indexOf('iPad') > 0) console.log(\"iPad\");\n    ; // iPad\n\n    if (ua.indexOf('Android') > 0) console.log(\"Android Tablet\");\n\n    __logger(\"Android\"); // Android\n\n  } else {\n    console.log(\"Desktop\");\n  }\n}\nfunction getElementTagStyle(elem) {\n  var htmlElem = elem;\n\n  if (htmlElem === \"html\" || \"body\") {\n    var getTag = document.getElementsByTagName(htmlElem).item(0);\n    var getStyle = window.getComputedStyle(getTag);\n    return getStyle;\n  } else {\n    console.log(\"Specify the html element or body element for the argument.\");\n    return;\n  }\n}\nfunction convertHex(color) {\n  var ret = /rgba?\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),?\\s*([.\\d]+)?\\)/.exec(color);\n  var convertHex = '';\n\n  for (var i = 1; i <= 3; i++) {\n    var hex = Number(ret[i]).toString(16);\n    convertHex += hex.length === 1 ? '0' + hex : hex;\n  }\n\n  return convertHex;\n}\nfunction convertComputedFontSize(jsonFontSize, targetElem) {\n  var computed = 'computed';\n  var setSize = jsonFontSize;\n  var htmlElem = targetElem;\n\n  if (setSize === computed) {\n    var computedStyle = getElementTagStyle(htmlElem);\n    var convertFloat = parseFloat(computedStyle.fontSize);\n    console.log(convertFloat);\n    return convertFloat;\n  } else {\n    return setSize;\n  }\n}\nfunction getStyles(elem) {\n  //getElementTagStyle()に移行したい\n  console.log(\"model.js: getStyle()でbody要素のCSSを取得します。\");\n  var styles = getElementTagStyle(elem);\n  console.log(\"body -> color: \" + styles.color + \";\");\n  console.log(\"body -> color: \" + \"#\" + convertHex(styles.color) + \";\");\n  console.log(\"body -> font-family: \" + styles.fontFamily + \";\");\n  console.log(\"body -> font-size: \" + styles.fontSize + \";\");\n  console.log(\"body -> line-height: \" + styles.lineHeight + \";\");\n  console.log(\"body -> letter-spacing: \" + styles.letterSpacing + \";\");\n  console.log(\"body -> font-feature-settings: \" + styles.fontFeatureSettings + \";\");\n  console.log(\"body -> -webkit-font-smoothing: \" + styles.webkitFontSmoothing + \";\");\n  console.log(\"body -> hanging-punctuation: \" + styles.hangingPunctuation + \";\");\n} // layout\n//両端のスペースの有無を判定して、ある場合は1以上の数値を返す。\n\nfunction decisionGutterSideType(currentGutterSide, currentFontSize) {\n  var gutterSide = currentGutterSide;\n  var fontSize = currentFontSize;\n\n  if (gutterSide === \"auto\") {\n    var result = 0;\n    return result;\n  } else {\n    var _result = currentGutterSide * fontSize;\n\n    return _result;\n  }\n}\n; //カラム幅が固定／動的か判定して、数値で返す。\n\nfunction decisionColumnSizeType(currentFontSize, currentSizeChar, currenttWidth, currentColumnNum, currentGutterTotal, currentGutterSideEachInstallments) {\n  var fontSize = currentFontSize;\n  var columnSize = currentSizeChar;\n  var width = currenttWidth;\n  var columnNum = currentColumnNum;\n  var gutterTotal = currentGutterTotal;\n  var totalFluidWidth = width - gutterTotal;\n\n  if (columnSize === \"fluid\") {\n    var columnWidth = totalFluidWidth / columnNum - currentGutterSideEachInstallments;\n    console.log(\"columnWidth->>>>> 'fluid!!!!'\");\n    return columnWidth;\n  } else {\n    var _columnWidth = fontSize * columnSize - currentGutterSideEachInstallments;\n\n    console.log(\"columnWidth->>>>>\" + _columnWidth);\n    return _columnWidth;\n  }\n} //view.js //////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction setSvgSizes(targetSvg, currentWidth, currentHeight) {\n  var svgAll = document.getElementById(targetSvg); // const renderWidth  = currentWidth - calcScrollbarWidth();\n\n  var renderWidth = currentWidth;\n  var renderHeight = currentHeight; // console.log(calcScrollbarWidth() + \"/\" + currentWidth + \"/\" + renderWidth);\n\n  svgAll.setAttribute(\"width\", renderWidth);\n  svgAll.setAttribute(\"height\", renderHeight);\n  svgAll.setAttribute(\"viewbox\", \"0 0 \" + renderWidth + \" \" + renderHeight);\n}\nfunction reset(resetElem) {\n  var target = resetElem;\n  target.textContent = null;\n}\nfunction wrapperFit() {\n  console.log(\"view.js: svg要素、g要素の横幅・縦幅を親要素に合わせます。\");\n  console.log(width());\n  console.log(height());\n}\nfunction insertStyleElem(config, userSetting) {\n  var style = document.createElement(\"style\");\n  var target = document.getElementById(\"tg_all\");\n  var property = document.createTextNode(config);\n  style.setAttribute(\"id\", \"tg_style\");\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = property.nodeValue;\n  } else {\n    style.appendChild(property);\n  }\n\n  ;\n  target.appendChild(style);\n} //controller.js //////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction resize(model, view) {\n  window.addEventListener(\"resize\", resize, false);\n  var timerResize = null;\n\n  function resize() {\n    clearTimeout(timerResize);\n    timerResize = setTimeout(function () {\n      console.group(\"%c[\" + model.lib.name + \"]: %c\" + \"%cwindow.addEventListener:%c %cresize%c\", model.console.red, '', model.console.green, '', model.console.blue, ''); //ここに処理を書く\n\n      model.debug.count.resize = model.debug.count.resize + 1;\n      console.log(\"ブラウザを「\" + model.debug.count.resize + \"回」リサイズしました。\");\n      console.log(model.width());\n      console.log(model.height());\n      view.render(\"resize\");\n      console.groupEnd();\n    }, 300);\n  }\n}\n/**\n * @void listenMediaQuery\n * @param Object model Typegridのモデル\n * @param Object view Typegridのビュー\n */\n\nfunction listenMediaQueries(model, view, callBack) {\n  var _self = this,\n      // ここから： _self = utils\n  myBreakPoints = model.user.media.contents.breakPoints.width.min,\n      myDevices = model.user.media.devices,\n      myUnit = model.user.general.unit.breakPoints,\n      myMediaQueryIndex = -1,\n      myMediaQueries = [],\n      myRender = function myRender(newMediaQueryIndex) {\n    myMediaQueryIndex = newMediaQueryIndex;\n    console.group(\"%c[\" + model.lib.name + \"]: %c\" + \"%cutils\\.listenMediaQueries:%c %c» \" + myDevices[myMediaQueryIndex] + \" « device matched%c\", model.console.red, '', model.console.green, '', model.console.blue, '');\n    console.log('New %c' + myDevices[myMediaQueryIndex] + '%c compatible device detected', 'font-weight: bold; font-style: italic;', '');\n    console.log('Redraw is required');\n    console.groupEnd();\n    callBack(myMediaQueryIndex);\n  },\n      checkMediaQuery = function checkMediaQuery(mediaQueryListener) {\n    if (mediaQueryListener.matches) {\n      var newMediaQueryIndex = mediaQueryListener.target ? mediaQueryListener.target.typegridIndex : mediaQueryListener.typegridIndex;\n\n      if (!isNaN(newMediaQueryIndex) && myMediaQueryIndex !== newMediaQueryIndex) {\n        return newMediaQueryIndex;\n      }\n    }\n\n    return -1;\n  };\n\n  _self.mediaQueryListener = function (mediaQueryListener) {\n    // utils.mediaQueryListener\n    var newMediaQueryIndex = checkMediaQuery(mediaQueryListener);\n\n    if (newMediaQueryIndex > -1) {\n      myRender(newMediaQueryIndex);\n    }\n  };\n\n  console.group(\"%c[\" + model.lib.name + \"]: %c\" + \"%cutils\\.listenMediaQueries:%c %c\" + myBreakPoints.length + \" media queries generated%c\", model.console.red, '', model.console.green, '', model.console.blue, '');\n  myBreakPoints.forEach(function (myBreakPoint, myIndex, myBreakPointsArray) {\n    // 最初：myIndex = 0 の場合は myMediaQueries[ 0 ] = window.matchMedia('screen and (min-width: ◯◯◯px) and (max-width: ◯◯◯px)')\n    // ...\n    // 最後：myIndex = N の場合は myMediaQueries[ N ] = window.matchMedia('screen and (min-width: ◯◯◯px)')\n    myMediaQueries[myIndex] = window.matchMedia(['screen and (min-width: ' + (myBreakPoint + myUnit) + ')', myBreakPointsArray[myIndex + 1] ? ' and (max-width:' + (myBreakPointsArray[myIndex + 1] - 1 + myUnit) + ')' : ''].join(''));\n    console.log('%c[ ' + myIndex + ' ] = ' + myDevices[myIndex] + '%c -> ' + myMediaQueries[myIndex].media, 'font-weight: bold', 'font-weight: normal'); // イベントリスナーの設定\n\n    myMediaQueries[myIndex].typegridIndex = myIndex;\n    myMediaQueries[myIndex].addListener(_self.mediaQueryListener); // はじめに (「min-width/max-width」が使用されますから一回しか呼び出せない)\n\n    if (myMediaQueries[myIndex].matches) {\n      var newMediaQueryIndex = checkMediaQuery(myMediaQueries[myIndex]);\n\n      if (newMediaQueryIndex > -1) {\n        _self.currentMedia = model.getJsonValues(newMediaQueryIndex); // Temp: _self.currentMedia = root.utils.currentMedia\n      } //_self.mediaQueryListener( myMediaQueries[ myIndex ] );\n\n    }\n  });\n  console.groupEnd();\n  _self.mediaQueries = myMediaQueries; // utils.mediaQueryListener (unlistenMediaQueries為に)\n}\n/**\n * @boolean unlistenMediaQueries\n */\n\nfunction unlistenMediaQueries() {\n  var _self = this; // ここから： _self = utils\n\n\n  if (!_self.mediaQueries) {\n    return false;\n  }\n\n  _self.mediaQueries.forEach(function (myMediaQuery) {\n    myMediaQuery.removeListener(_self.mediaQueryListener);\n  });\n\n  return true;\n}\n/**\n * @boolean checkWindowSize\n * @param Object model Typegridのモデル\n * @param Object view Typegridのビュー\n */\n\nfunction checkWindowSize(model, view, callBack) {\n  var _self = this; // utils\n\n\n  _self.timerResize = -1;\n\n  _self.resizeWindowListener = function (event) {\n    if (_self.timerResize === -1) {\n      _self.timerResize = setTimeout(function () {\n        console.group(\"%c[\" + model.lib.name + \"]: %c\" + \"%cutils.checkWindowSize:%c %cresize event triggered%c\", model.console.red, '', model.console.green, '', model.console.blue, ''); //ここに処理を書く\n\n        model.debug.count.resize = model.debug.count.resize + 1;\n        console.log(\"ブラウザを「\" + model.debug.count.resize + \"回」リサイズしました。\");\n        console.log(model.width());\n        console.log(model.height());\n        callBack();\n        console.groupEnd();\n        clearTimeout(_self.timerResize);\n        _self.timerResize = -1;\n      }, 300);\n    }\n  };\n\n  window.addEventListener(\"resize\", _self.resizeWindowListener, false);\n}\n/**\n * @boolean uncheckWindowSize\n */\n\nfunction uncheckWindowSize() {\n  var _self = this;\n\n  if (!_self.resizeWindowListener) {\n    return false;\n  }\n\n  window.removeEventListener(\"resize\", _self.resizeWindowListener, false);\n  return true;\n}\nfunction keyBinds(model, view) {\n  var displayStatus = model.visibility;\n  var fixedStatus = model.fixed; // console.log(displayStatus);\n\n  var all = document.getElementById(\"tg_all\"); // console.log(all);\n\n  document.body.addEventListener('keydown', function (event) {\n    if (event.key === 'g') {\n      // console.log(\"Gが押されました。\");\n      displayStatus = !displayStatus; // console.log(displayStatus);\n      // console.log(all);\n\n      if (displayStatus == true) {\n        all.style.display = \"block\";\n      } else {\n        all.style.display = \"none\";\n      }\n    }\n\n    if (event.key === 'p') {\n      // console.log(\"Gが押されました。\");\n      // displayStatus = !displayStatus;\n      // console.log(displayStatus);\n      // console.log(all);\n      if (fixedStatus == true) {\n        all.style.position = \"fixed\";\n      } else {\n        all.style.position = \"absolute\";\n      }\n\n      fixedStatus = !fixedStatus;\n    }\n  });\n}\n\n//# sourceURL=webpack:///./src/js/modules/utils.js?");

/***/ }),

/***/ "./src/js/mvc/controller.js":
/*!**********************************!*\
  !*** ./src/js/mvc/controller.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _default; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nvar _default = /*#__PURE__*/function () {\n  function _default(utils, model, view) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, _default);\n\n    this.utils = utils;\n    this.model = model;\n    this.view = view; //イベントをラッピングして、動かすメソッド\n\n    this.media();\n    this.init();\n    this.resize();\n    this.keyBinds(this.model, this.view); // console.group(\"%c[\" + this.model.lib.name + \"]: %c\" + \"%ccontroller.js:%c %cconstructor()%c\", this.model.console.red , '' , this.model.console.green , '' , this.model.console.blue , '' );\n    //     // this.resize(this.model, this.view);\n    //     this.keyBinds(this.model, this.view);\n    // console.groupEnd();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(_default, [{\n    key: \"init\",\n    value: function init() {\n      var _self = this,\n          _callback = function _callback() {\n        console.log('BOO');\n\n        _self.view.render('init');\n      };\n\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', _callback);\n      } else {\n        _callback();\n      }\n    }\n  }, {\n    key: \"media\",\n    value: function media() {\n      //メディアクエリに変更があった際に、view.jsのメソッドを動かす\n      var _self = this,\n          renderMedia = function renderMedia(mediaIndex) {\n        _self.view.render(\"media\", mediaIndex);\n      };\n\n      _self.utils.listenMediaQueries(_self.model, _self.view, renderMedia); //this.media()に変更したい\n\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      //ウィンドウサイズに変更があった際に、view.jsのメソッドを動かす\n      var _self = this,\n          renderResize = function renderResize() {\n        _self.view.render(\"resize\");\n      };\n\n      _self.utils.checkWindowSize(_self.model, _self.view, renderResize); //this.resize()に変更したい\n\n    }\n  }, {\n    key: \"keyBinds\",\n    value: function keyBinds(model, view) {\n      this.utils.keyBinds(model, view);\n    }\n  }]);\n\n  return _default;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/mvc/controller.js?");

/***/ }),

/***/ "./src/js/mvc/model.js":
/*!*****************************!*\
  !*** ./src/js/mvc/model.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _default; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nvar _default = /*#__PURE__*/function () {\n  function _default(utils, config, user) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, _default);\n\n    this.config = config;\n    this.utils = utils;\n    this.user = this.utils.getJSON(this.config.lib.json.storage);\n    console.log(this.user);\n    this.devices = this.user.media.devices;\n    this.fontSize = this.user.media.contents.fontSize;\n    this.visibility = this.user.general.visibility;\n    this.fixed = this.user.general.fixed;\n    this.scrollbarWidth = this.utils.calcScrollbarWidth();\n    this.debug = config.debug;\n    this.msg = config.msg;\n    this.lib = config.lib;\n    this.console = config.console;\n    this.attr = config.attr;\n    this.aria = config.aria;\n    this.style = config.style;\n    this.sizes = config.sizes;\n    this.num = config.num;\n    this.color = config.color;\n    this.elem = config.elem;\n    console.group(\"%c[\" + this.lib.name + \"]: %c\" + \"%cmodel.js:%c %cconstructor()%c\", this.console.red, '', this.console.green, '', this.console.blue, ''); //this.deviceDecision(this.user.general.deviceDecision);\n    // this.deviceDecision(this.user.general.deviceDecision, this.user.media.devices, this.user.media.contents.breakPoints.width.min, this.msg.attention.deviceDicision, this.msg.err.deviceDicision);\n    // this.scrollbarWidth();\n    // this.calcScrollbarWidth();\n\n    this.width();\n    this.height(); // this.fontSize(this.user.media.contents.fontSize);\n\n    this.ua(); // this.base();\n    // this.unit();\n    // this.layout();\n    // this.rhythm();\n    // this.ruler();\n    // this.guide();\n    // this.gui();\n\n    this.keyboard();\n    this.size();\n    this.getStyle();\n    console.groupEnd();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(_default, [{\n    key: \"getJsonValues\",\n    value: function getJsonValues(myIndex) {\n      var myMedia = this.user.media;\n      return {\n        devices: myMedia.devices[myIndex],\n        contents: {\n          writingMode: myMedia.contents.writingMode[myIndex],\n          fontSize: myMedia.contents.fontSize[myIndex],\n          lineHeight: myMedia.contents.lineHeight[myIndex],\n          letterSpacing: myMedia.contents.letterSpacing[myIndex],\n          breakPoints: {\n            width: {\n              min: myMedia.contents.breakPoints.width.min[myIndex]\n            }\n          },\n          gutter: myMedia.contents.gutter[myIndex]\n        },\n        grids: {\n          base: {\n            num: myMedia.grids.base.num[myIndex],\n            gutter: myMedia.grids.base.gutter[myIndex]\n          },\n          column: {\n            num: myMedia.grids.column.num[myIndex],\n            sizeChar: myMedia.grids.column.sizeChar[myIndex],\n            gutter: myMedia.grids.column.gutter[myIndex]\n          },\n          row: {\n            height: myMedia.grids.row.height[myIndex],\n            gutter: myMedia.grids.row.gutter[myIndex]\n          },\n          unit: {\n            num: myMedia.grids.unit.num[myIndex],\n            gutter: myMedia.grids.unit.gutter[myIndex]\n          }\n        }\n      };\n    } // calcScrollbarWidth() {\n    //     this.utils.calcScrollbarWidth();\n    // }\n\n  }, {\n    key: \"deviceDecision\",\n    value: function deviceDecision(decisionStr) {\n      // let decision      = decisionStr,\n      //     mediaDevices   = mediaDevicesStr,\n      //     mediaWidthMin = mediaBreakpointsWidthMinStr,\n      //     msgAttention  = msgAttentionStr,\n      //     msgErr  = msgErrStr;\n      // this.utils.deviceDecision(decision, mediaDevices, mediaWidthMin, msgAttention, msgErr);\n      var decision = decisionStr;\n\n      if (decision === \"@media\") {\n        console.log(decision);\n        this.media(this.user.media.devices, this.user.media.contents.breakPoints.width.min);\n      } else if (decision === \"userAgent\") {\n        console.log(this.msg.attention.deviceDicision);\n      } else {\n        console.log(this.msg.err.deviceDicision);\n      } // console.log(fontSize(this.user.media.contents.fontSize));\n\n\n      console.log(this.devices);\n      console.log(this.fontSize);\n      console.log(this.fontSize.length);\n      console.log(this.fontSize[0]);\n    }\n  }, {\n    key: \"media\",\n    value: function media(devices, breakPoints) {\n      //matchMediaでの判定\n      console.log(this.utils.media(devices, breakPoints));\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      //幅の取得\n      //縦スクロールの有無を確認\n      var isScrollbarOccur = this.utils.checkBrowserHeight();\n      console.log(\"ブラウザの縦幅と、スクロール含んだ縦幅を評価中...............\");\n      console.log(isScrollbarOccur); //縦スクロールバーのサイズを取得\n\n      var diffScrollbarWidth = this.scrollbarWidth; //横幅を取得\n\n      var widthOrigin = this.utils.width();\n      var calcWidth;\n\n      if (isScrollbarOccur == true) {\n        calcWidth = widthOrigin - diffScrollbarWidth;\n        console.log(\"true / スクロールバーあり: \" + diffScrollbarWidth + \"px / width: \" + calcWidth + \"px\");\n        console.log(calcWidth);\n      } else {\n        calcWidth = widthOrigin;\n        console.log(\"false / スクロールバーなし / width: \" + calcWidth + \"px\");\n        console.log(calcWidth);\n      }\n\n      return calcWidth;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      //高さの取得\n      return this.utils.height();\n    }\n  }, {\n    key: \"wrapperHeight\",\n    value: function wrapperHeight() {\n      return this.utils.setWrapperHeight();\n    } // fontSize(setting) {\n    //     let jsonSetting = setting;\n    //     console.log(jsonSetting);\n    //     return jsonSetting;\n    // }\n\n  }, {\n    key: \"ua\",\n    value: function ua() {\n      //userAgentの出力\n      this.utils.ua();\n    }\n  }, {\n    key: \"base\",\n    value: function base() {\n      console.log(\"model.js: base()の値を設定します。\");\n    }\n  }, {\n    key: \"unit\",\n    value: function unit() {\n      console.log(\"model.js: unit()の値を設定します。\");\n    }\n  }, {\n    key: \"layout\",\n    value: function layout() {\n      console.log(\"model.js: layout()の値を設定します。\");\n    }\n  }, {\n    key: \"row\",\n    value: function row() {}\n  }, {\n    key: \"rhythm\",\n    value: function rhythm() {}\n  }, {\n    key: \"ruler\",\n    value: function ruler() {\n      console.log(\"model.js: ruler()の値を設定します。\");\n    }\n  }, {\n    key: \"guide\",\n    value: function guide() {\n      console.log(\"model.js: guide()の値を設定します。\");\n    }\n  }, {\n    key: \"gui\",\n    value: function gui() {\n      console.log(\"model.js: gui()の値を設定します。\");\n    }\n  }, {\n    key: \"keyboard\",\n    value: function keyboard() {\n      console.log(\"model.js: keyboard()の値を設定します。\");\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      //ブラウザのウィンドウサイズを変更する\n      console.log(\"model.js: size()の値を設定します。\");\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      this.utils.getStyles(\"html\"); // this.utils.detectFontSizeType();\n    }\n  }]);\n\n  return _default;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/mvc/model.js?");

/***/ }),

/***/ "./src/js/mvc/view.js":
/*!****************************!*\
  !*** ./src/js/mvc/view.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _default; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nvar _default = /*#__PURE__*/function () {\n  function _default(utils, model) {\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, _default);\n\n    this.utils = utils;\n    this.model = model;\n    console.log(this.model.user.general);\n    console.group(\"%c[\" + this.model.lib.name + \"]: %c\" + \"%cview.js:%c %cconstructor()%c\", this.model.console.red, '', this.model.console.green, '', this.model.console.blue, ''); // this.wrapper(this.model.elem.wrapper.html, this.model);\n\n    console.groupEnd();\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(_default, [{\n    key: \"wrapper\",\n    value: function wrapper(htmlSet, model) {\n      this.utils.wrapper(htmlSet, model);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(resetElem) {\n      this.utils.reset(resetElem);\n    }\n  }, {\n    key: \"visibility\",\n    value: function visibility() {\n      var status = this.model.visibility;\n      var target = document.getElementById(\"tg_all\");\n\n      if (status === true) {\n        console.log(this.model.visibility);\n        target.setAttribute(\"style\", \"display: block\");\n      } else {\n        console.log(this.model.visibility);\n        target.setAttribute(\"style\", \"display: none\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(flg, param1) {\n      //引数によって実行するメソッドを分けたい。\n      var flgType = flg;\n\n      if (flgType === \"init\") {\n        console.log('view.js: render(\"init\");');\n        this.wrapper(this.model.elem.wrapper.html, this.model);\n        this.model.wrapperHeight();\n        this.visibility();\n        this.utils.insertStyleElem(this.model.config.styleBase); // this.model.calcScrollbarWidth();\n\n        this.utils.setSvgSizes(\"tg_grid\", this.model.width(), this.utils.height()); // this.utils.setSvgSizes(\"tg_grid\", this.model.width(), 400);\n        // this.model.calcScrollbarWidth();\n\n        this.currentMedia = this.utils.currentMedia; // 最初\n\n        try {\n          delete this.utils.currentMedia;\n        } catch (e) {\n          window.console.log(e);\n        } // let renderFontSize = this.utils.convertComputedFontSize(this.currentMedia.contents.fontSize, \"html\");\n        // なま JSON console.log( this.utils.config );\n\n\n        this.render('resize');\n      } else if (flgType === \"resize\") {\n        console.log('view.js: render(\"resize\");');\n        console.log(this.currentMedia);\n        console.log(this.currentMedia.contents.fontSize);\n        var renderFontSize = this.utils.convertComputedFontSize(this.currentMedia.contents.fontSize, \"html\");\n        var renderLineHeight = this.currentMedia.contents.lineHeight;\n        var renderWidth = this.model.width();\n        var renderHeight = this.utils.height();\n        this.model.wrapperHeight();\n        var renderColumnNum = this.currentMedia.grids.column.num;\n        var renderSizeChar = this.currentMedia.grids.column.sizeChar;\n        var renderRowHeight = this.currentMedia.grids.row.height;\n        var renderRowGutter = this.currentMedia.grids.row.gutter;\n        var renderGutter = this.currentMedia.grids.column.gutter;\n        var renderGutterSide = this.currentMedia.contents.gutter;\n        this.utils.setSvgSizes(\"tg_grid\", renderWidth, renderHeight); // this.utils.setSvgSizes(\"tg_grid\", renderWidth, 400);\n\n        this.rhythm(renderFontSize, renderLineHeight, renderWidth, renderHeight);\n        this.row(renderFontSize, renderLineHeight, renderWidth, renderHeight, renderRowHeight, renderRowGutter);\n        this.layout(renderFontSize, renderWidth, renderHeight, renderColumnNum, renderSizeChar, renderGutter, renderGutterSide);\n        this.base();\n        this.unit();\n      } else if (flgType === \"change\") {\n        console.log('view.js: render(\"change\");');\n        this.unit();\n      } else if (flgType === \"media\") {\n        this.rhythm();\n        console.log('view.js: render(\"media\");');\n        this.currentMedia = this.model.getJsonValues(param1);\n        console.log(this.currentMedia);\n      }\n    }\n  }, {\n    key: \"grid\",\n    value: function grid() {\n      type = {\n        //引数によって実行するメソッドを分けたい。\n        init: function init() {\n          console.log(hoge);\n        },\n        resize: function resize() {\n          console.log(hoge);\n        },\n        media: function media() {\n          console.log(hoge);\n        }\n      };\n    }\n  }, {\n    key: \"base\",\n    value: function base() {\n      console.log(\"view.js: base()を生成します。\");\n    }\n  }, {\n    key: \"unit\",\n    value: function unit() {\n      console.log(\"view.js: unit()を生成します。\");\n    }\n  }, {\n    key: \"layout\",\n    value: function layout(currentFontSize, currentWidth, currentHeight, currentColumnNum, currentSizeChar, currentGutter, currentGutterSide) {\n      //基本：ブラウザ\n      var fontSize = currentFontSize; //現在のフォントサイズ\n\n      var width = currentWidth; //現在のブラウザ横幅\n\n      var height = currentHeight; //現在のブラウザ縦幅\n      //基本：json上の設定\n\n      var columnNum = currentColumnNum; //現在のカラム数\n\n      var columnSize = currentSizeChar; //現在のカラム1つあたりのサイズ（文字数換算）\n\n      var gutterBaseWidth = currentFontSize * currentGutter; //カラム間のスペースのサイズ（ピクセル）\n\n      var guttterTotal = gutterBaseWidth * columnNum - gutterBaseWidth; //カラム間のスペースの合計サイズ。\n      //計算\n\n      var gutterSideEach = this.utils.decisionGutterSideType(currentGutterSide, fontSize); //両端のスペースが\"auto\"の場合は0、そうでない場合は数値。\n\n      var gutterSideInstallments = gutterSideEach * 2 / columnNum; //両端のスペースの合計値をカラム数で割って、各カラムからマイナスする数値。\n\n      console.log(\"■テスト中:>>>\" + gutterSideInstallments);\n      var columnWidth = this.utils.decisionColumnSizeType(fontSize, columnSize, width, columnNum, guttterTotal, gutterSideInstallments); //カラム1つあたりの横幅\n\n      var widthTotal = columnWidth * columnNum; //全カラムの合計値\n\n      var widthAll = guttterTotal + widthTotal; //全カラム＋全溝の合計値\n\n      var gutterOutsideWidthTotal = width - widthAll; //左右両端のスペースの合計値。ブラウザ幅から全カラム＋カラム間の溝の合計幅を引いた数値。\n\n      var gutterOutsideWidthOneSide = gutterOutsideWidthTotal / 2; //左右両端のスペースの合計値の半分。\n\n      console.log(\"view.js: layout()を生成します。\");\n      var targetInsert = document.getElementById(\"tg_layout__body\");\n      this.reset(targetInsert); //生成したものを削除\n\n      var insertElement;\n      var fragGrids = document.createDocumentFragment(); // let columnWidthTotal;\n\n      console.log(targetInsert, insertElement, fragGrids);\n\n      for (var cnt = 0; cnt < columnNum; cnt++) {\n        console.log(\"Y軸の実線：\" + fontSize);\n        var rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        var text = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        rect.setAttribute(\"class\", \"rect-x\" + cnt);\n        rect.setAttribute(\"x\", gutterBaseWidth * cnt + cnt * columnWidth + gutterOutsideWidthOneSide);\n        rect.setAttribute(\"y\", \"0\"); // rect.setAttribute(\"width\", columnWidth - gutterSideEachInstallments);\n\n        rect.setAttribute(\"width\", columnWidth);\n        rect.setAttribute(\"height\", height);\n        rect.setAttribute(\"fill\", \"#ff0000\");\n        rect.setAttribute(\"fill-opacity\", 0.125);\n        rect.setAttribute(\"stroke\", \"#ff0000\");\n        rect.setAttribute(\"stroke-opacity\", 0.5);\n        text.appendChild(rect);\n        fragGrids.appendChild(rect);\n      } // return fragGrids;\n\n\n      targetInsert.appendChild(fragGrids);\n    }\n  }, {\n    key: \"row\",\n    value: function row(currentFontSize, currentLineHeight, currentWidth, currentHeight, currentRowHeight, currentRowGutter) {\n      var fontSize = currentFontSize;\n      var lineHeight = currentLineHeight;\n      var width = currentWidth;\n      var height = currentHeight;\n      var rowHeight = currentRowHeight;\n      var rowGuttter = currentRowGutter;\n      var rowTotalChar = rowHeight + rowGuttter;\n      var rowTotalHeight = rowTotalChar * fontSize;\n      console.log(\"rowTotalChar: \" + rowTotalChar);\n      console.log(\"rowTotalChar * fontSize: \" + rowTotalChar * fontSize);\n      console.log(\"rowTotalHeight: \" + rowTotalHeight);\n      var loopNum = parseInt(height / rowTotalHeight + 1);\n      console.log(\"view.js: row()を生成します。\");\n      console.log(\"loopNum: ---> \" + loopNum);\n      console.log(\"rowHeight: ---> \" + rowHeight);\n      var targetInsert = document.getElementById(\"tg_row__body\");\n      this.reset(targetInsert); //生成したものを削除\n\n      var insertElement;\n      var fragGrids = document.createDocumentFragment();\n\n      for (var cnt = 0; cnt < loopNum; cnt++) {\n        var rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect.setAttribute(\"class\", \"row-y\" + cnt);\n        rect.setAttribute(\"x\", \"0\");\n        var nowRowHeight = cnt * rowHeight * fontSize;\n        console.log(nowRowHeight);\n        var nowRouGutter = cnt * rowGuttter * fontSize;\n        console.log(nowRouGutter);\n        rect.setAttribute(\"y\", parseInt(nowRowHeight + nowRouGutter));\n        console.log(\"rowのy座標\" + nowRowHeight + nowRouGutter);\n        rect.setAttribute(\"width\", width);\n        rect.setAttribute(\"height\", rowHeight * fontSize);\n        rect.setAttribute(\"fill\", \"#ff0000\");\n        rect.setAttribute(\"fill-opacity\", 0.125);\n        rect.setAttribute(\"stroke\", \"#ff0000\");\n        rect.setAttribute(\"stroke-opacity\", 0.5);\n        fragGrids.appendChild(rect);\n      } // return fragGrids;\n\n\n      targetInsert.appendChild(fragGrids);\n    }\n  }, {\n    key: \"rhythm\",\n    value: function rhythm(currentFontSize, currentLineHeight, currentWidth, currentHeight) {\n      var fontSize = currentFontSize;\n      var lineHeight = currentLineHeight;\n      var width = currentWidth;\n      var height = currentHeight;\n      var loopNum = parseInt(height / fontSize * lineHeight);\n      console.log(\"現在のフォントサイズ→→→→→→→\" + fontSize);\n      console.log(\"view.js: rhythm()を生成します。\");\n      var targetInsert = document.getElementById(\"tg_rhythm__body\");\n      this.reset(targetInsert); //生成したものを削除\n\n      var insertElement;\n      var fragGrids = document.createDocumentFragment();\n      console.log(targetInsert, insertElement, fragGrids);\n\n      for (var cnt = 0; cnt < loopNum; cnt++) {\n        console.log(\"Y軸の実線：\" + fontSize);\n        var line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        line.setAttribute(\"class\", \"line-y\" + cnt);\n        line.setAttribute(\"x1\", \"0\");\n        line.setAttribute(\"y1\", cnt * fontSize * lineHeight / 2);\n        line.setAttribute(\"x2\", width);\n        line.setAttribute(\"y2\", cnt * fontSize * lineHeight / 2);\n        line.setAttribute(\"fill\", \"none\");\n        line.setAttribute(\"stroke\", \"#999999\");\n        line.setAttribute(\"stroke-width\", 0.5);\n        line.setAttribute(\"stroke-opacity\", 0.75);\n        fragGrids.appendChild(line);\n      } // return fragGrids;\n\n\n      targetInsert.appendChild(fragGrids);\n    }\n  }, {\n    key: \"ruler\",\n    value: function ruler() {\n      console.log(\"view.js: ruler()を生成します。\");\n    }\n  }, {\n    key: \"guide\",\n    value: function guide() {\n      console.log(\"view.js: guide()を生成します。\");\n    }\n  }, {\n    key: \"gui\",\n    value: function gui() {\n      console.log(\"view.js: gui()を生成します。\");\n    }\n  }, {\n    key: \"keyboard\",\n    value: function keyboard() {\n      console.log(\"view.js: keyboard()を生成します。\");\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      //ブラウザのウィンドウサイズを変更する\n      console.log(\"view.js: size()を生成します。\");\n    }\n  }]);\n\n  return _default;\n}();\n\n\n\n//# sourceURL=webpack:///./src/js/mvc/view.js?");

/***/ })

/******/ });